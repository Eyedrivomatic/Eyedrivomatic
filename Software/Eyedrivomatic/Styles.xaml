<!--
 Copyright (c) 2016 Eyedrivomatic Authors

 This file is part of the 'Eyedrivomatic' PC application.

    This program is intended for use as part of the 'Eyedrivomatic System' for 
    controlling an electric wheelchair using soley the user's eyes. 

    Eyedrivomatic is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Eyedrivomaticis distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Eyedrivomatic.  If not, see <http://www.gnu.org/licenses/>.
-->


<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prism="http://www.codeplex.com/prism"
                    xmlns:local="clr-namespace:Eyedrivomatic"
                    xmlns:controls="clr-namespace:Eyedrivomatic.Controls;assembly=Eyedrivomatic.Controls"
                    xmlns:dwellclick="clr-namespace:Eyedrivomatic.Controls.DwellClick;assembly=Eyedrivomatic.Controls"
                    xmlns:infrastructure="clr-namespace:Eyedrivomatic.Infrastructure;assembly=Eyedrivomatic.Infrastructure">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Themes/generic.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Eyedrivomatic.Resources;component/Images.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <infrastructure:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter" VisibilityIfTrue="{x:Static Visibility.Visible}" VisibilityIfFalse="{x:Static Visibility.Collapsed}"/>

    <Style x:Key="DwellClickAdornerStyle" TargetType="{x:Type dwellclick:DwellClickAdorner}">
        <Setter Property="ProgressIndicatorSize" Value="40"/>
        <Setter Property="ProgressIndicatorFill">
            <Setter.Value>
                <SolidColorBrush Color="#99A36AF5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
    </Style>

    <Style x:Key="StandardButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource MainButtonBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="dwellclick:DwellClickBehavior.Configuration" Value="{Binding Path=(dwellclick:DwellClickBehavior.DefaultConfiguration)}"/>
        <Setter Property="dwellclick:DwellClickBehavior.AdornerStyle" Value="{StaticResource DwellClickAdornerStyle}"/>
    </Style>

    <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource StandardButtonStyle}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{TemplateBinding Content}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageAndTextButtonStyle" TargetType="{x:Type controls:ButtonWithIcon}" BasedOn="{StaticResource {x:Type controls:ButtonWithIcon}}">
    </Style>

    <Style x:Key="TextButtonStyle" BasedOn="{StaticResource StandardButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{TemplateBinding Content}" 
                                   TextAlignment="Center"
                                   FontFamily="{TemplateBinding Button.FontFamily}" 
                                   FontWeight="{TemplateBinding Button.FontWeight}" 
                                   FontSize="{TemplateBinding Button.FontSize}" 
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImportantTextButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonStyle}">
        <Setter Property="Background" Value="{StaticResource ImportantButtonBrush}"/>
    </Style>

    <Style x:Key="EasyTextButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonStyle}">
        <Setter Property="Background" Value="#FF57D465"/>
    </Style>

    <Style x:Key="StandardTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding Content.DataContext.HeaderInfo, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Background" Value="{StaticResource MainButtonBrush}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="dwellclick:DwellClickBehavior.Configuration" Value="{Binding Path=(dwellclick:DwellClickBehavior.DefaultConfiguration)}"/>
        <Setter Property="dwellclick:DwellClickBehavior.AdornerStyle" Value="{StaticResource DwellClickAdornerStyle}"/>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type TabItem}">
                    <TextBlock Text="{Binding}" 
                               TextAlignment="Center"
                               FontFamily="{TemplateBinding TabItem.FontFamily}" 
                               FontWeight="{TemplateBinding TabItem.FontWeight}" 
                               FontSize="{TemplateBinding TabItem.FontSize}" 
                               TextWrapping="Wrap"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                </DataTemplate>

            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}" >
                    <Grid Width="Auto" Height="Auto" x:Name="TabItemRoot" Margin="{TemplateBinding Margin}" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#F2FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#CCFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#7FFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF6DBDD1"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#D8FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#C6FFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" To="#8CFFFFFF"/>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" To="#3FFFFFFF"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="5" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Background="{StaticResource MainButtonBrush}"  Margin="1">
                                <Border Opacity="0"  x:Name="BackgroundAnimation" Background="#FF448DCA" />
                                <Rectangle x:Name="BackgroundGradient" >
                                    <Rectangle.Fill>
                                        <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                            <GradientStop Color="#7FFFFFFF" Offset="0" />
                                            <GradientStop Color="#72FFFFFF" Offset="0.375" />
                                            <GradientStop Color="#66FFFFFF" Offset="0.625" />
                                            <GradientStop Color="#3FFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>
                        <AdornerDecorator IsHitTestVisible="False"/>
                        <ContentPresenter 
                                Name="PART_SelectedContentHost"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Center"
                                Margin="{TemplateBinding Padding}"
                                MinHeight="90"/>
                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="PART_SelectedContentHost" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="false">
                            <Setter TargetName="PART_SelectedContentHost" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridRegionStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource StandardTabItemStyle}" />
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}" />
    </Style>

    <Style x:Key="HorizontalTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource StandardTabItemStyle}">
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ConfigurationRegionStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource HorizontalTabItemStyle}" />
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="110"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Center"/>

                        <ContentPresenter Grid.Row="1" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource MainButtonBrush}"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="dwellclick:DwellClickBehavior.Configuration" Value="{Binding Path=(dwellclick:DwellClickBehavior.DefaultConfiguration)}"/>
        <Setter Property="dwellclick:DwellClickBehavior.AdornerStyle" Value="{StaticResource DwellClickAdornerStyle}"/>

        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <infrastructure:BoolToImageConverter x:Key="BoolToCheckedImageConverter" ImageIfTrue="{StaticResource Check}"/>
                    </DataTemplate.Resources>
                    <DockPanel>
                        <Grid DockPanel.Dock="Left" 
                              Width="60"
                              Height="50" >

                            <Border x:Name="CheckBoxBorder"  BorderBrush="Black" BorderThickness="3" CornerRadius="10" Margin="3">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="3" ShadowDepth="3"/>
                                </Border.Effect>
                            </Border>

                            <Image Source="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=IsChecked, Converter={StaticResource BoolToCheckedImageConverter}}"
                                   Stretch="Uniform" Margin="7,0,0,7"
                                   HorizontalAlignment="Left"  VerticalAlignment="Bottom">
                                <Image.Effect>
                                    <DropShadowEffect BlurRadius="7" ShadowDepth="5"/>
                                </Image.Effect>
                            </Image>

                        </Grid>
                        <TextBlock x:Name="ButtonText" Text="{TemplateBinding Content}"
                                   TextAlignment="Center"
                                   FontFamily="{TemplateBinding CheckBox.FontFamily}" 
                                   FontWeight="{TemplateBinding CheckBox.FontWeight}" 
                                   FontSize="{TemplateBinding CheckBox.FontSize}" 
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Padding="25"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:BrowsableList}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="LayoutRoot">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="75"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="75"/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="PrevItem"
                            Style="{StaticResource TextButtonStyle}"
                            Content="{TemplateBinding controls:BrowsableList.PrevLabel}"
                            Command="{Binding TemplateBinding controls:BrowsableList.PrevItemCommand}"
                            Grid.Column="0"
                            MinHeight="75"/>

                        <ListBox x:Name="ItemsList" 
                                 Grid.Column="1" 
                                 VerticalAlignment="Stretch" 
                                 VerticalContentAlignment="Center"
                                 FontFamily="Ariel"
                                 FontWeight="Bold"
                                 FontSize="20"                            
                                 ItemsSource="{TemplateBinding controls:BrowsableList.ItemsSource}"
                                 SelectedItem="{TemplateBinding controls:BrowsableList.SelectedItem}"/>


                        <Button x:Name="NextItem" 
                            Style="{StaticResource TextButtonStyle}"
                            Content="{TemplateBinding controls:BrowsableList.NextLabel}"
                            Command="{Binding TemplateBinding controls:BrowsableList.NextItemCommand}"
                            Grid.Column="2"
                            MinHeight="75"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>