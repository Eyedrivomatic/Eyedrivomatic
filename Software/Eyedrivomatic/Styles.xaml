<!--
 Copyright (c) 2016 Eyedrivomatic Authors

 This file is part of the 'Eyedrivomatic' PC application.

    This program is intended for use as part of the 'Eyedrivomatic System' for 
    controlling an electric wheelchair using soley the user's eyes. 

    Eyedrivomatic is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Eyedrivomaticis distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Eyedrivomatic.  If not, see <http://www.gnu.org/licenses/>.
-->


<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prism="http://www.codeplex.com/prism"
                    xmlns:local="clr-namespace:Eyedrivomatic"
                    xmlns:controls="clr-namespace:Eyedrivomatic.Controls;assembly=Eyedrivomatic.Controls"
                    xmlns:dwellclick="clr-namespace:Eyedrivomatic.Controls.DwellClick;assembly=Eyedrivomatic.Controls"
                    xmlns:infrastructure="clr-namespace:Eyedrivomatic.Infrastructure;assembly=Eyedrivomatic.Infrastructure">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Eyedrivomatic.Controls;component/Themes/generic.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Eyedrivomatic.Resources;component/Images.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <infrastructure:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter" VisibilityIfTrue="{x:Static Visibility.Visible}" VisibilityIfFalse="{x:Static Visibility.Collapsed}"/>

    <Style x:Key="NavigationRegionStyle" TargetType="{x:Type ItemsControl}">
        
    </Style>
    
    <Style TargetType="{x:Type Grid}">
        <Setter Property="SnapsToDevicePixels" Value="False"/>
    </Style>

    <Style x:Key="GridRegionStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource StandardTabItemStyle}" />
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}" />
    </Style>

    <Style x:Key="ConfigurationRegionStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource HorizontalTabItemStyle}" />
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15*" MaxHeight="100"/>
                            <RowDefinition Height="85*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Center"/>

                        <ContentPresenter Grid.Row="1" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SettingLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="SettingTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="SettingIntUpDownStyle" TargetType="{x:Type controls:IntUpDown}">
        <Setter Property="Margin" Value="5"/>
    </Style>

</ResourceDictionary>