<!--
 Copyright (c) 2016 Eyedrivomatic Authors

 This file is part of the 'Eyedrivomatic' PC application.

    This program is intended for use as part of the 'Eyedrivomatic System' for 
    controlling an electric wheelchair using soley the user's eyes. 

    Eyedrivomatic is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Eyedrivomaticis distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Eyedrivomatic.  If not, see <http://www.gnu.org/licenses/>.
-->


<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Eyedrivomatic"
                    xmlns:controls="clr-namespace:Eyedrivomatic.Controls"
                    xmlns:model="clr-namespace:Eyedrivomatic.Model"
                    xmlns:viewmodel="clr-namespace:Eyedrivomatic.ViewModel"
                    xmlns:view="clr-namespace:Eyedrivomatic.View"
                    xmlns:converter="clr-namespace:Eyedrivomatic.Converter"
                    xmlns:hardware="clr-namespace:Eyedrivomatic.Hardware;assembly=Eyedrivomatic.Hardware">

    <ControlTemplate x:Key="DwellButton" TargetType="{x:Type Button}">
            <controls:DwellButton
                Command="{TemplateBinding Command}"
                CommandParameter="{TemplateBinding CommandParameter}"
                CommandTarget="{TemplateBinding CommandTarget}"
                Margin="{TemplateBinding Button.Margin}"
                Padding="{TemplateBinding Button.Padding}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                Foreground="{TemplateBinding Foreground}"
                Cursor="{TemplateBinding Cursor}">
            <AdornerDecorator>
                <ContentPresenter/>
            </AdornerDecorator>
        </controls:DwellButton>
    </ControlTemplate>

    <Style x:Key="StandardButton" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="#FFF3F2A2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Template" Value="{StaticResource DwellButton}"/>
    </Style>

    <Style x:Key="ImageButton" TargetType="{x:Type Button}" BasedOn="{StaticResource StandardButton}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="{TemplateBinding Content}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextButton" BasedOn="{StaticResource StandardButton}" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Ariel"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                        <TextBlock Text="{TemplateBinding Content}" 
                                   TextAlignment="Center"
                                   FontFamily="{TemplateBinding Button.FontFamily}" 
                                   FontWeight="{TemplateBinding Button.FontWeight}" 
                                   FontSize="{TemplateBinding Button.FontSize}" 
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageAndTextButton" TargetType="{x:Type controls:ButtonWithIcon}" BasedOn="{StaticResource StandardButton}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel>
                        <Image Source="{Binding RelativeSource={RelativeSource AncestorType=controls:ButtonWithIcon}, Path=IconSource}" DockPanel.Dock="Left" 
                               Stretch="UniformToFill"/>
                        <TextBlock x:Name="ButtonText" Text="{TemplateBinding Content}"
                                   TextAlignment="Center"
                                   FontFamily="{TemplateBinding Button.FontFamily}" 
                                   FontWeight="{TemplateBinding Button.FontWeight}" 
                                   FontSize="{TemplateBinding Button.FontSize}" 
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Padding="25"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImportantButton" TargetType="{x:Type Button}" BasedOn="{StaticResource StandardButton}">
        <Setter Property="Background" Value="Red"/>
    </Style>

    <Style x:Key="ImportantTextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButton}">
        <Setter Property="Background" Value="Red"/>
    </Style>

    <Style x:Key="EasyTextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButton}">
        <Setter Property="Background" Value="#FF57D465"/>
    </Style>

    <Style x:Key="DiagonalSpeedReductionToggleButton" BasedOn="{StaticResource ImportantTextButton}" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontStyle" Value="Oblique"/>
    </Style>


    <Style x:Key="PowerButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Content" Value="{StaticResource Off}"/>
    </Style>

    <Style x:Key="ContinueButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Content" Value="{StaticResource Continue}"/>
    </Style>

    <Style x:Key="ResetButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Content" Value="{StaticResource Reset}"/>
    </Style>

    <Style x:Key="AppNavigationButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButton}">
        <Setter Property="Width" Value="140"/>
    </Style>

    <Style x:Key="DriveButton" TargetType="{x:Type Button}" BasedOn="{StaticResource AppNavigationButton}" >
        <Setter Property="Content" Value="Drive"/>
    </Style>

    <Style x:Key="TrimButton" TargetType="{x:Type Button}" BasedOn="{StaticResource AppNavigationButton}" >
        <Setter Property="Content" Value="Trim"/>
    </Style>

    <Style x:Key="SettingsButton" TargetType="{x:Type Button}" BasedOn="{StaticResource AppNavigationButton}" >
        <Setter Property="Content" Value="Settings"/>
    </Style>

    <Style x:Key="ForwardBackButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Background" Value="#FF57D465"/>
    </Style>

    <Style x:Key="ForwardButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ForwardBackButton}">
        <Setter Property="Content" Value="{StaticResource Up}"/>
    </Style>

    <Style x:Key="BackwardButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ForwardBackButton}">
        <Setter Property="Content" Value="{StaticResource Down}"/>
    </Style>


    <Style x:Key="LeftRightButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
    </Style>

    <Style x:Key="LeftButton" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftRightButton}">
        <Setter Property="Content" Value="{StaticResource Left}"/>
    </Style>

    <Style x:Key="RightButton" TargetType="{x:Type Button}" BasedOn="{StaticResource LeftRightButton}">
        <Setter Property="Content" Value="{StaticResource Right}"/>
    </Style>

    <Style x:Key="DiagonalButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Background" Value="#FF94ADDB"/>
    </Style>

    <Style x:Key="ForwardLeftButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DiagonalButton}">
        <Setter Property="Content" Value="{StaticResource UpLeft}"/>
    </Style>

    <Style x:Key="ForwardRightButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DiagonalButton}">
        <Setter Property="Content" Value="{StaticResource UpRight}"/>
    </Style>

    <Style x:Key="BackwardLeftButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DiagonalButton}">
        <Setter Property="Content" Value="{StaticResource DownLeft}"/>
    </Style>

    <Style x:Key="BackwardRightButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DiagonalButton}">
        <Setter Property="Content" Value="{StaticResource DownRight}"/>
    </Style>


    <Style x:Key="TrimDirectionButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButton}">
        <Setter Property="Background" Value="#FF97EBD3"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="TrimForwardButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButton}">
        <Setter Property="Content" Value="{StaticResource TrimUp}"/>
    </Style>

    <Style x:Key="TrimBackwardButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButton}">
        <Setter Property="Content" Value="{StaticResource TrimDown}"/>
    </Style>

    <Style x:Key="TrimLeftButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButton}">
        <Setter Property="Content" Value="{StaticResource TrimLeft}"/>
    </Style>

    <Style x:Key="TrimRightButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButton}">
        <Setter Property="Content" Value="{StaticResource TrimRight}"/>
    </Style>

    <Style x:Key="NudgeTrimPanelStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="1" VerticalAlignment="Stretch"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="TrimIncrementButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <controls:ButtonWithIcon Content="{TemplateBinding Content}" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          IconSource="{TemplateBinding Tag}" 
                                          Style="{StaticResource ImageAndTextButton}"
                                          Command="{TemplateBinding Command}"
                                          CommandParameter="{TemplateBinding CommandParameter}"
                                          CommandTarget="{TemplateBinding CommandTarget}"
                                          Margin="{TemplateBinding Button.Margin}"
                                          Padding="{TemplateBinding Button.Padding}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Cursor="{TemplateBinding Cursor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IncreaseNudgeSpeedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButton}">
        <Setter Property="Content" Value="Nudge Speed"/>
        <Setter Property="Tag" Value="{StaticResource TrimUp}"/>
    </Style>

    <Style x:Key="DecreaseNudgeSpeedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButton}">
        <Setter Property="Content" Value="Nudge Speed"/>
        <Setter Property="Tag" Value="{StaticResource TrimDown}"/>
    </Style>

    <Style x:Key="IncreaseNudgeDurationButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButton}">
        <Setter Property="Content" Value="Nudge Duration"/>
        <Setter Property="Tag" Value="{StaticResource TrimUp}"/>
    </Style>

    <Style x:Key="DecreaseNudgeDurationButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButton}">
        <Setter Property="Content" Value="Nudge Duration"/>
        <Setter Property="Tag" Value="{StaticResource TrimDown}"/>
    </Style>

    
    <DataTemplate DataType="{x:Type viewmodel:StatusViewModel}">
        <view:StatusView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodel:DrivingViewModel}">
        <view:DrivingView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type viewmodel:TrimViewModel}">
        <view:TrimView/>
    </DataTemplate>

    <DataTemplate x:Key="NavigationCommandTemplate" DataType="{x:Type viewmodel:NavigationCommandViewModel}">
        <Button Content="{Binding Path=DisplayName}" Command="{Binding Path=Command}" VerticalAlignment="Stretch" Height="Auto" Style="{StaticResource TextButton}"/>
    </DataTemplate>

    <DataTemplate x:Key="NavigationCommandsTemplate">
        <DockPanel VerticalAlignment="Stretch">
            <ItemsControl IsTabStop="False" 
                          ItemsSource="{Binding}"
                          ItemTemplate="{StaticResource NavigationCommandTemplate}"
                          VerticalAlignment="Stretch"
                          HorizontalContentAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DockPanel>
    </DataTemplate>

</ResourceDictionary>