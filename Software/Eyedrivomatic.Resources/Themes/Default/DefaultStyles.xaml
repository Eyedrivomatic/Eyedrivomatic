<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:infrastructure="clr-namespace:Eyedrivomatic.Infrastructure;assembly=Eyedrivomatic.Infrastructure">

    <Thickness x:Key="ButtonBorderThickness">3</Thickness>
    <CornerRadius x:Key="ButtonBorderCorner">3</CornerRadius>

    <DataTemplate DataType="{x:Type ImageSource}">
        <Image Source="{Binding}" Stretch="Uniform" Margin="5" RenderOptions.BitmapScalingMode="HighQuality"
               StretchDirection="Both" />
    </DataTemplate>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                                   StrokeThickness="1"
                                   Stroke="{DynamicResource SelectedBackgroundBrush}"
                                   StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonPressedBackgroundBrush}"
                                                                       Duration="0:0:0.25" />

                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       To="{DynamicResource ButtonPressedBorderBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Viewbox Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource DefaultButtonBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonPressedBackgroundBrush}"
                                                                       Duration="0:0:0.25" />

                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       To="{DynamicResource ButtonPressedBorderBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="CheckedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ToggleButtonCheckedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <Viewbox Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckedToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonPressedBackgroundBrush}"
                                                                       Duration="0:0:0.25" />

                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       To="{DynamicResource ButtonPressedBorderBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="CheckedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ToggleButtonCheckedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image x:Name="CheckImage"
                                   Grid.Column="0"
                                   Source="{DynamicResource ToggleButton.Unchecked.Image}"
                                   Stretch="Uniform"
                                   RenderOptions.BitmapScalingMode="HighQuality"
                                   Margin="5" />
                            <Viewbox Grid.Column="1" Stretch="Uniform">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Viewbox>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}"/>

    <Style x:Key="RadioToggleButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}" />

    <Style x:Key="FlashingToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Panel.Background)"
                                                                       To="{DynamicResource ButtonPressedBackgroundBrush}"
                                                                       Duration="0:0:0.25" />

                                        <infrastructure:BrushAnimation Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       To="{DynamicResource ButtonPressedBorderBrush}"
                                                                       Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.25" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Duration="0:0:2" To="1" 
                                                             Storyboard.TargetName="CheckedVisualElement"
                                                             Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:2" BeginTime="0:0:2" To="0"
                                                             Storyboard.TargetName="CheckedVisualElement"
                                                             Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="CheckedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ToggleButtonCheckedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <Viewbox Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource ItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Padding="2" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Duration="0"
                                                                       Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background"
                                                                       To="{DynamicResource SelectedBackgroundBrush}" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <infrastructure:BrushAnimation Duration="0"
                                                                       Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background"
                                                                       To="{DynamicResource SelectedUnfocusedBrush}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource GroupBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="FontFamily" Value="Ariel" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="RegionNavigationButtonStyle" TargetType="ToggleButton"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrushAlt}" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="infrastructure:AncestorOpacityMask.Maskable"
                Value="{Binding RelativeSource={RelativeSource AncestorType=Grid}}" />
        <Setter Property="infrastructure:AncestorOpacityMask.Enabled"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>