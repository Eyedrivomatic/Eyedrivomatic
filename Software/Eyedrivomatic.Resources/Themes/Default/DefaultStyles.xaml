<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:infrastructure="clr-namespace:Eyedrivomatic.Infrastructure;assembly=Eyedrivomatic.Infrastructure"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:dwellClick="clr-namespace:Eyedrivomatic.Eyegaze.DwellClick;assembly=Eyedrivomatic.Eyegaze"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:localization="clr-namespace:Gu.Localization;assembly=Gu.Localization">

    <Thickness x:Key="ButtonBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <CornerRadius x:Key="ButtonBorderCorner" BottomLeft="3" TopLeft="3" BottomRight="3" TopRight="3" />
    <Thickness x:Key="DefaultMargin" Left="2" Top="2" Right="2" Bottom="2" />

    <Thickness x:Key="ItemBorderThickness" Left="0" Top="0" Right="0" Bottom="0" />

    <system:Double x:Key="StandardButtonHeight">50</system:Double>

    <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">35</system:Double>
    <system:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">35</system:Double>
    <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">35</system:Double>
    <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">35</system:Double>

    <DataTemplate DataType="{x:Type ImageSource}">
        <Image Source="{Binding}" Stretch="Uniform" Margin="5" RenderOptions.BitmapScalingMode="HighQuality"
               StretchDirection="Both" />
    </DataTemplate>

    <DataTemplate DataType="{x:Type localization:Translation}">
        <TextBlock Text="{Binding Translated}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type localization:StaticTranslation}">
        <TextBlock Text="{Binding Translated}"/>
    </DataTemplate>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2"
                                   StrokeThickness="1"
                                   Stroke="{DynamicResource SelectedBackgroundBrush}"
                                   StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button -->
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="dwellClick:DwellClickBehavior.Configuration"
                Value="{Binding Path=(dwellClick:DwellClickBehavior.DefaultConfiguration), Mode=OneWay}" />
        <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="PressedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonPressedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonPressedBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Viewbox Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{DynamicResource ActiveBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="dwellClick:DwellClickBehavior.Configuration"
                Value="{Binding Path=(dwellClick:DwellClickBehavior.DefaultConfiguration), Mode=OneWay}" />
        <Setter Property="Margin" Value="{DynamicResource DefaultMargin}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="MinHeight" Value="23" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="PressedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonPressedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonPressedBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="CheckedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ToggleButtonCheckedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <Viewbox Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckedToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedImage"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="UncheckedImage"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="UncheckedImage"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="CheckedImage"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="PressedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonPressedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonPressedBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image x:Name="CheckedImage"
                                   Grid.Column="0"
                                   Source="{DynamicResource ToggleButton.Checked.Image}"
                                   Stretch="Uniform"
                                   RenderOptions.BitmapScalingMode="HighQuality"
                                   Margin="5"
                                   Opacity="0" />
                            <Image x:Name="UncheckedImage"
                                   Grid.Column="0"
                                   Source="{DynamicResource ToggleButton.Unchecked.Image}"
                                   Stretch="Uniform"
                                   RenderOptions.BitmapScalingMode="HighQuality"
                                   Margin="5" />
                            <Viewbox Grid.Column="1" Stretch="Uniform">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Viewbox>
                        </Grid>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}" />

    <Style x:Key="FlashingToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation Duration="0:0:2" To="1"
                                                             Storyboard.TargetName="CheckedVisualElement"
                                                             Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:2" BeginTime="0:0:2" To="0"
                                                             Storyboard.TargetName="CheckedVisualElement"
                                                             Storyboard.TargetProperty="Opacity">
                                                <DoubleAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="PressedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonPressedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonPressedBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="MouseOverVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="CheckedVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource ToggleButtonCheckedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ToggleButtonCheckedBorderBrush}"
                                Opacity="0" />
                        <Viewbox Stretch="Uniform">
                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Viewbox>
                        <Border x:Name="DisabledVisualElement"
                                CornerRadius="{DynamicResource ButtonBorderCorner}"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Background" Value="{DynamicResource ListBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="dwellClick:DwellClickBehavior.Configuration"
                Value="{Binding Path=(dwellClick:DwellClickBehavior.DefaultConfiguration), Mode=OneWay}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ItemBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ItemBorderThickness}" />
        <Setter Property="Foreground" Value="{DynamicResource ItemForegroundBrush}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                        <infrastructure:BrushAnimation Duration="0:0:0.2"
                                                                       Storyboard.TargetProperty="(ListBoxItem.Foreground)"
                                                                       To="{DynamicResource SelectedForegroundBrush}" />
                                        <DoubleAnimation Storyboard.TargetName="UnfocusedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                        <infrastructure:BrushAnimation Duration="0:0:0.2"
                                                                       Storyboard.TargetProperty="(ListBoxItem.Foreground)"
                                                                       To="{DynamicResource ItemForegroundBrush}" />
                                        <DoubleAnimation Storyboard.TargetName="UnfocusedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="UnfocusedVisualElement"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                        <infrastructure:BrushAnimation Duration="0:0:0.2"
                                                                       Storyboard.TargetName="Border"
                                                                       Storyboard.TargetProperty="Background"
                                                                       To="{DynamicResource SelectedUnfocusedBrush}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />
                        <Border x:Name="PressedVisualElement"
                                Background="{DynamicResource ButtonPressedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonPressedBorderBrush}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <Border x:Name="MouseOverVisualElement"
                                Background="{DynamicResource ButtonMouseOverBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource ButtonMouseOverBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="SelectedVisualElement"
                                Background="{DynamicResource SelectedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource SelectedBorderBrush}"
                                Opacity="0" />
                        <Border x:Name="UnfocusedVisualElement"
                                Background="{DynamicResource SelectedBackgroundBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{DynamicResource SelectedBorderBrush}"
                                Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource DisabledOverlayBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                        <AdornerDecorator />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="{DynamicResource GroupBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Padding" Value="15" />
    </Style>

    <Style x:Key="RegionNavigationButtonStyle" TargetType="ToggleButton"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrushAlt}" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <!--<Setter Property="infrastructure:AncestorOpacityMask.Maskable"
                Value="{Binding ElementName=NaviagationAreaBackground}" />
        <Setter Property="infrastructure:AncestorOpacityMask.Enabled"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" />-->
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1"
                                   Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                CanHorizontallyScroll="False" CanVerticallyScroll="False"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" Grid.Column="0"
                                                Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow"
                                   Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                   Orientation="Horizontal" Grid.Row="1"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   ViewportSize="{TemplateBinding ViewportWidth}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="dwellClick:DwellClickBehavior.Configuration"
                Value="{Binding Path=(dwellClick:DwellClickBehavior.DefaultConfiguration), Mode=OneWay}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border" BorderBrush="{DynamicResource ScrollBar.Static.Border}" BorderThickness="1"
                            Background="{DynamicResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource ScrollBar.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource ScrollBar.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource ScrollBar.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource ScrollBar.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            <Setter Property="Background" TargetName="border"
                                    Value="{DynamicResource ScrollBar.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource ScrollBar.Disabled.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <!--<Setter Property="OverridesDefaultStyle" Value="true" />-->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{DynamicResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{DynamicResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{DynamicResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle" Fill="{DynamicResource ScrollBar.Static.Thumb}"
                               Height="{TemplateBinding Height}" SnapsToDevicePixels="True"
                               Width="{TemplateBinding Width}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{DynamicResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Fill" TargetName="rectangle"
                                    Value="{DynamicResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{DynamicResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition
                                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Grid.Row="1" />
                        <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{DynamicResource ScrollBarButton}" Grid.Row="0">
                            <Path x:Name="ArrowTop"
                                  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                  Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}"
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{DynamicResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{DynamicResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2"
                                      Style="{DynamicResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                  Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
                                           Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="ArrowTop"
                                    Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                            <Setter Property="Fill" TargetName="ArrowBottom"
                                    Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight"
                        Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition
                                        MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}" Grid.Column="1" />
                                <RepeatButton x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource ScrollBarButton}" Grid.Column="0">
                                    <Path x:Name="ArrowLeft"
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                          Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                      Style="{DynamicResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                      Style="{DynamicResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{DynamicResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{DynamicResource ScrollBarButton}">
                                    <Path x:Name="ArrowRight"
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                          Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft"
                                            Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                                    <Setter Property="Fill" TargetName="ArrowRight"
                                            Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type xctk:DoubleUpDown}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="xctk:DoubleUpDown">
                    <xctk:ButtonSpinner x:Name="PART_Spinner"
                                        IsTabStop="False"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                                        ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}"
                                        ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}">
                        <xctk:WatermarkTextBox x:Name="PART_TextBox"
                                               BorderThickness="0"
                                               Background="Transparent"
                                               ContextMenu="{TemplateBinding ContextMenu}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               FontSize="{TemplateBinding FontSize}"
                                               FontStretch="{TemplateBinding FontStretch}"
                                               FontStyle="{TemplateBinding FontStyle}"
                                               FontWeight="{TemplateBinding FontWeight}"
                                               Foreground="{TemplateBinding Foreground}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                                               IsTabStop="True"
                                               MinWidth="20"
                                               AcceptsReturn="False"
                                               Padding="{TemplateBinding Padding}"
                                               AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                                               AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                                               TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                               TextWrapping="NoWrap"
                                               TabIndex="{TemplateBinding TabIndex}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                                               WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                    </xctk:ButtonSpinner>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ResourceKeys.ControlMouseOverBorderKey}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                           Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsReadOnly"
                                    Value="True"
                                    TargetName="PART_TextBox" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                     Value="True">
                            <Setter Property="IsReadOnly"
                                    Value="True"
                                    TargetName="PART_TextBox" />
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ResourceKeys.ControlSelectedBorderKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="PART_TextBox"
                                    Property="FocusManager.FocusedElement"
                                    Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="IncreaseGlyphNormalKey">
        <Label Content="+" Foreground="{DynamicResource {x:Static themes:ResourceKeys.GlyphNormalForegroundKey}}"/>
    </DataTemplate>
    <DataTemplate x:Key="IncreaseGlyphDisabledKey">
        <Label Content="+" Foreground="{DynamicResource {x:Static themes:ResourceKeys.GlyphDisabledForegroundKey}}"/>
    </DataTemplate>
    <DataTemplate x:Key="DecreaseGlyphNormalKey">
        <Label Content="-" Foreground="{DynamicResource {x:Static themes:ResourceKeys.GlyphNormalForegroundKey}}"/>
    </DataTemplate>
    <DataTemplate x:Key="DecreaseGlyphDisabledKey">
        <Label Content="-" Foreground="{DynamicResource {x:Static themes:ResourceKeys.GlyphDisabledForegroundKey}}"/>
    </DataTemplate>
    
    <Style TargetType="xctk:ButtonSpinner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ButtonSpinner}">
                    <Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="DecrementColumn" Width="Auto" />
                                <ColumnDefinition x:Name="ContentColumn" Width="*" />
                                <ColumnDefinition x:Name="IncrementColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <RepeatButton x:Name="PART_DecreaseButton" Grid.Column="0"
                                          Height="{DynamicResource StandardButtonHeight}"
                                          Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                                          IsTabStop="{TemplateBinding IsTabStop}"
                                          ContentTemplate="{StaticResource DecreaseGlyphNormalKey}"
                                          VerticalContentAlignment="Center"
                                          HorizontalContentAlignment="Center" 
                                          dwellClick:DwellClickBehavior.Configuration="{Binding Path=(dwellClick:DwellClickBehavior.DefaultConfiguration), Mode=OneWay}"/>

                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Focusable="False"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <RepeatButton x:Name="PART_IncreaseButton" Grid.Column="2"
                                          Height="{DynamicResource StandardButtonHeight}"
                                          Width="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                                          IsTabStop="{TemplateBinding IsTabStop}"
                                          ContentTemplate="{StaticResource IncreaseGlyphNormalKey}"
                                          VerticalContentAlignment="Center"
                                          HorizontalContentAlignment="Center" 
                                          dwellClick:DwellClickBehavior.Configuration="{Binding Path=(dwellClick:DwellClickBehavior.DefaultConfiguration), Mode=OneWay}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ResourceKeys.ControlMouseOverBorderKey}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource {x:Static themes:ResourceKeys.ControlSelectedBorderKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static themes:ResourceKeys.ControlDisabledBackgroundKey}}" />
                        </Trigger>
                        <Trigger SourceName="PART_IncreaseButton" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_IncreaseButton" Property="ContentTemplate"
                                    Value="{StaticResource IncreaseGlyphDisabledKey}" />
                        </Trigger>
                        <Trigger SourceName="PART_DecreaseButton" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DecreaseButton" Property="ContentTemplate"
                                    Value="{StaticResource DecreaseGlyphDisabledKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>