<!--
 Copyright (c) 2016 Eyedrivomatic Authors

 This file is part of the 'Eyedrivomatic' PC application.

    This program is intended for use as part of the 'Eyedrivomatic System' for 
    controlling an electric wheelchair using soley the user's eyes. 

    Eyedrivomatic is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Eyedrivomaticis distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Eyedrivomatic.  If not, see <http://www.gnu.org/licenses/>.
-->


<UserControl x:Class="Eyedrivomatic.ButtonDriver.Views.DrivingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:infrastructure="clr-namespace:Eyedrivomatic.Infrastructure;assembly=Eyedrivomatic.Infrastructure"
             xmlns:services="clr-namespace:Eyedrivomatic.ButtonDriver.Hardware.Services;assembly=Eyedrivomatic.ButtonDriver.Hardware"
             xmlns:viewModels="clr-namespace:Eyedrivomatic.ButtonDriver.ViewModels"
             xmlns:models="clr-namespace:Eyedrivomatic.ButtonDriver.Macros.Models;assembly=Eyedrivomatic.ButtonDriver.Macros"
             xmlns:views="clr-namespace:Eyedrivomatic.ButtonDriver.Views"
             xmlns:configuration="clr-namespace:Eyedrivomatic.ButtonDriver.Configuration;assembly=Eyedrivomatic.ButtonDriver.Configuration"
             xmlns:prism="http://www.codeplex.com/prism"
             xmlns:dwellClick="clr-namespace:Eyedrivomatic.Eyegaze.DwellClick;assembly=Eyedrivomatic.Eyegaze"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:l="http://gu.se/Localization"
             xmlns:resources="clr-namespace:Eyedrivomatic.Resources;assembly=Eyedrivomatic.Resources"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="876"
             d:DataContext="{d:DesignInstance d:Type=viewModels:DesignDrivingViewModel, IsDesignTimeCreatable=True}"
             IsEnabled="{Binding IsOnline}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <infrastructure:BoolToVisibilityConverter x:Key="BoolToCollapsedConverterInv"
                                                      VisibilityIfTrue="{x:Static Visibility.Collapsed}"
                                                      VisibilityIfFalse="{x:Static Visibility.Visible}" />

            <Style x:Key="DriveControlHeaderStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap" />
                <Setter Property="TextTrimming" Value="None" />
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HeaderForegroundBrush}" />
            </Style>

            <Button x:Key="DirectionButtonBrushPlaceholder" Background="{DynamicResource ButtonBackgroundBrush}" />
            <Style x:Key="DirectionButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Background"
                        Value="{Binding Source={StaticResource DirectionButtonBrushPlaceholder}, Path=Background}" />
                <Setter Property="dwellClick:DwellClickBehavior.Role"
                        Value="{x:Static dwellClick:DwellClickActivationRole.DirectionButtons}" />
            </Style>

            <Style x:Key="DirectionGridStyle" TargetType="Grid">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="LayoutRoot">
        <Grid.Resources>
            <ResourceDictionary>
                <Storyboard x:Key="ShowForwardViewAnimation">
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="ForwardViewCameraRegion"
                        Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                    </DoubleAnimationUsingKeyFrames>

                    <infrastructure:BrushAnimation
                        Storyboard.Target="{StaticResource DirectionButtonBrushPlaceholder}"
                        Storyboard.TargetProperty="Background"
                        To="Transparent"
                        Duration="0:0:1" />
                </Storyboard>
                <Storyboard x:Key="HideForwardViewAnimation">
                    <DoubleAnimationUsingKeyFrames
                        Storyboard.TargetName="ForwardViewCameraRegion"
                        Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0" />
                    </DoubleAnimationUsingKeyFrames>

                    <infrastructure:BrushAnimation
                        Storyboard.Target="{StaticResource DirectionButtonBrushPlaceholder}"
                        Storyboard.TargetProperty="Background"
                        To="{DynamicResource ButtonBackgroundBrush}"
                        Duration="0:0:1" />
                </Storyboard>
            </ResourceDictionary>
        </Grid.Resources>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup Name="VisualizationStates">
                <VisualState Name="ShowForwardView" Storyboard="{StaticResource ShowForwardViewAnimation}" />
                <VisualState Name="HideForwardView" Storyboard="{StaticResource HideForwardViewAnimation}" />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <i:Interaction.Behaviors>
            <ei:DataStateBehavior Binding="{Binding ShowForwardView}"
                                  Value="True"
                                  TrueState="ShowForwardView" FalseState="HideForwardView" />
        </i:Interaction.Behaviors>

        <Grid.RowDefinitions>
            <RowDefinition Height="5*" MaxHeight="25" />
            <RowDefinition Height="95*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="6*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Background="{DynamicResource HeaderBackgroundBrush}">
            <Viewbox StretchDirection="DownOnly">
                <TextBlock Text="{l:Static resources:Strings.DrivingView_Duration}"
                           Style="{DynamicResource DriveControlHeaderStyle}" />
            </Viewbox>
        </Grid>

        <UniformGrid Name="DurationGrid" Grid.Column="0" Grid.Row="1" Columns="1">
            <RadioButton GroupName="Duration"
                         Content="0.5" ContentStringFormat="F1"
                         IsChecked="{Binding Duration, Converter={StaticResource StringCompareToBoolConverter}, ConverterParameter=500}" />
            <RadioButton GroupName="Duration"
                         Content="1"
                         IsChecked="{Binding Duration, Converter={StaticResource StringCompareToBoolConverter}, ConverterParameter=1000}" />
            <RadioButton GroupName="Duration"
                         Content="2"
                         IsChecked="{Binding Duration, Converter={StaticResource StringCompareToBoolConverter}, ConverterParameter=2000}" />
            <RadioButton GroupName="Duration"
                         Content="3"
                         IsChecked="{Binding Duration, Converter={StaticResource StringCompareToBoolConverter}, ConverterParameter=3000}" />
            <RadioButton GroupName="Duration"
                         Content="4"
                         IsChecked="{Binding Duration, Converter={StaticResource StringCompareToBoolConverter}, ConverterParameter=4000}" />
            <RadioButton GroupName="Duration"
                         Content="5"
                         IsChecked="{Binding Duration, Converter={StaticResource StringCompareToBoolConverter}, ConverterParameter=5000}" />
        </UniformGrid>

        <ContentControl Name="ForwardViewCameraRegion"
                        Grid.Row="0" Grid.RowSpan="2"
                        Grid.Column="1"
                        prism:RegionManager.RegionName="{x:Static infrastructure:RegionNames.ForwardViewCameraRegion}" />

        <Grid Name="DirectionButtonsGrid" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
              Opacity="{Binding CameraOverlayOpacity, Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid Name="LeftDirectionsGrid" Grid.Column="0" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Button Name="LeftNudgeButton"
                        Grid.Row="0" Content="{DynamicResource Button.NudgeLeft.Content}"
                        Command="{Binding NudgeCommand}"
                        CommandParameter="{x:Static services:XDirection.Left}"
                        Style="{DynamicResource DirectionButtonStyle}" />
                <Button Name="ForwardLeftButton"
                        Grid.Row="1" Content="{DynamicResource Button.ForwardLeft.Content}"
                        Command="{Binding MoveCommand}"
                        CommandParameter="{x:Static services:Direction.ForwardLeft}"
                        Style="{DynamicResource DirectionButtonStyle}" />
                <Button Name="LeftButton"
                        Grid.Row="2" Content="{DynamicResource Button.Left.Content}" Command="{Binding MoveCommand}"
                        CommandParameter="{x:Static services:Direction.Left}"
                        Style="{DynamicResource DirectionButtonStyle}" />
                <Button Name="BackwardLeftButton"
                        Grid.Row="3" Content="{DynamicResource Button.BackwardLeft.Content}"
                        Command="{Binding MoveCommand}" CommandParameter="{x:Static services:Direction.BackwardLeft}"
                        Style="{DynamicResource DirectionButtonStyle}" />
            </Grid>

            <UniformGrid Name="CenterDirectionsGrid" Grid.Column="1" Grid.Row="0" Columns="1">
                <Button Name="ContinueButton"
                        Content="{DynamicResource Button.Continue.Content}" Command="{Binding ContinueCommand}"
                        Visibility="{Binding SafetyBypass, Converter={StaticResource BoolToCollapsedConverterInv}}"
                        Style="{DynamicResource DirectionButtonStyle}" />

                <Button Name="ForwardButton" Content="{DynamicResource Button.Forward.Content}"
                        Command="{Binding MoveCommand}" CommandParameter="{x:Static services:Direction.Forward}"
                        Style="{DynamicResource DirectionButtonStyle}" />

                <Button Name="StopButton" Content="{DynamicResource Button.Stop.Content}"
                        Command="{Binding StopCommand}"
                        Style="{DynamicResource DirectionButtonStyle}"
                        dwellClick:DwellClickBehavior.Role="{x:Static dwellClick:DwellClickActivationRole.StopButton}" />

                <Button Name="BackwardButton" Content="{DynamicResource Button.Backward.Content}"
                        Command="{Binding MoveCommand}" CommandParameter="{x:Static services:Direction.Backward}"
                        Style="{DynamicResource DirectionButtonStyle}" />
            </UniformGrid>

            <Grid Name="RightDirectionsGrid" Grid.Column="2" Grid.Row="0" Style="{DynamicResource DirectionGridStyle}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Button Name="RightNudgeButton" Content="{DynamicResource Button.NudgeRight.Content}" Grid.Row="0"
                        Command="{Binding NudgeCommand}" CommandParameter="{x:Static services:XDirection.Right}"
                        Style="{DynamicResource DirectionButtonStyle}" />
                <Button Name="ForwardRightButton" Grid.Row="1"
                        Content="{DynamicResource Button.ForwardRight.Content}"
                        Command="{Binding MoveCommand}" CommandParameter="{x:Static services:Direction.ForwardRight}"
                        Style="{DynamicResource DirectionButtonStyle}" />
                <Button Name="RightButton" Grid.Row="2" Content="{DynamicResource Button.Right.Content}"
                        Command="{Binding MoveCommand}" CommandParameter="{x:Static services:Direction.Right}"
                        Style="{DynamicResource DirectionButtonStyle}" />
                <Button Name="BackwardRightButton" Grid.Row="3"
                        Content="{DynamicResource Button.BackwardRight.Content}"
                        Command="{Binding MoveCommand}" CommandParameter="{x:Static services:Direction.BackwardRight}"
                        Style="{DynamicResource DirectionButtonStyle}" />
            </Grid>
        </Grid>

        <Grid Grid.Row="0" Grid.Column="2" Background="{DynamicResource HeaderBackgroundBrush}">
            <Viewbox StretchDirection="DownOnly">
                <TextBlock Text="{l:Static resources:Strings.DrivingView_DriveSpeeds}"
                           Style="{DynamicResource DriveControlHeaderStyle}" />
            </Viewbox>
        </Grid>

        <Grid Name="SpeedAndActionsGrid" Grid.Column="2" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50*" />
                <RowDefinition Height="50*" />
            </Grid.RowDefinitions>

            <ListView Name="ProfileSpeeds" Grid.Row="0" ItemsSource="{Binding Speeds}" Padding="0" Margin="0"
                      SelectedItem="{Binding CurrentSpeed}" HorizontalContentAlignment="Stretch"
                      VerticalContentAlignment="Stretch"
                      BorderThickness="0">
                <ListView.Template>
                    <ControlTemplate TargetType="ListView">
                        <Grid Name="PresenterGrid" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <ItemsPresenter Name="Presenter"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="PresenterGrid" Property="Background" Value="{DynamicResource DisabledOverlayBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ListView.Template>
                <ListView.Resources>
                    <infrastructure:LocalizedStringOrImageConverter x:Key="LocalizedDriveSpeeds"
                                                                    ResourcePattern="DrivingView_Speed_{0}" />
                </ListView.Resources>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="configuration:ProfileSpeed">
                        <RadioButton Content="{Binding Path=Name, Converter={StaticResource LocalizedDriveSpeeds}}"
                                     IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=IsSelected}"
                                     GroupName="ProfileSpeeds" />
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <ItemsControl Name="Actions" Grid.Row="1" ItemsSource="{Binding Macros}"
                          Background="{DynamicResource ButtonBackgroundBrushAlt}">
                <ItemsControl.Resources>
                    <infrastructure:LocalizedStringOrImageConverter x:Key="LocalizedMacroName"
                                                                    ResourcePattern="MacrosName_{0}" />
                </ItemsControl.Resources>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:IMacro}">
                        <Button
                            Content="{Binding DisplayName, Converter={StaticResource LocalizedMacroName}}"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=views:DrivingView}, Path=ViewModel.ExecuteMacroCommand}"
                            CommandParameter="{Binding}"
                            Background="{DynamicResource ButtonBackgroundBrushAlt}"
                            Foreground="{DynamicResource ButtonForegroundBrushAlt}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>