<!--
 Copyright (c) 2016 Eyedrivomatic Authors

 This file is part of the 'Eyedrivomatic' PC application.

    This program is intended for use as part of the 'Eyedrivomatic System' for 
    controlling an electric wheelchair using soley the user's eyes. 

    Eyedrivomatic is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Eyedrivomaticis distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Eyedrivomatic.  If not, see <http://www.gnu.org/licenses/>.
-->


<UserControl x:Class="Eyedrivomatic.ButtonDriver.Views.TrimView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"             
             xmlns:local="clr-namespace:Eyedrivomatic.ButtonDriver.Views"
             xmlns:controls="clr-namespace:Eyedrivomatic.Controls;assembly=Eyedrivomatic.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1160"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Eyedrivomatic.ButtonDriver;component/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="TrimGridStyle" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="40"/>
            </Style>

            <Style x:Key="NudgeTrimPanelStyle" TargetType="{x:Type ItemsControl}">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="1" VerticalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TrimIncrementButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButtonStyle}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <controls:ButtonWithIcon Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          IconSource="{TemplateBinding Tag}" 
                                          Style="{StaticResource ImageAndTextButtonStyle}"
                                          Command="{TemplateBinding Command}"
                                          Margin="{TemplateBinding Button.Margin}"
                                          Padding="{TemplateBinding Button.Padding}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Cursor="{TemplateBinding Cursor}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IncreaseNudgeSpeedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButtonStyle}">
                <Setter Property="Content" Value="Nudge Speed"/>
                <Setter Property="Tag" Value="{StaticResource TrimUp}"/>
            </Style>

            <Style x:Key="DecreaseNudgeSpeedButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButtonStyle}">
                <Setter Property="Content" Value="Nudge Speed"/>
                <Setter Property="Tag" Value="{StaticResource TrimDown}"/>
            </Style>

            <Style x:Key="IncreaseNudgeDurationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButtonStyle}">
                <Setter Property="Content" Value="Nudge Duration"/>
                <Setter Property="Tag" Value="{StaticResource TrimUp}"/>
            </Style>

            <Style x:Key="DecreaseNudgeDurationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimIncrementButtonStyle}">
                <Setter Property="Content" Value="Nudge Duration"/>
                <Setter Property="Tag" Value="{StaticResource TrimDown}"/>
            </Style>

            <Style x:Key="TrimDirectionButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButtonStyle}">
                <Setter Property="Background" Value="#FF97EBD3"/>
                <Setter Property="Margin" Value="10"/>
            </Style>

            <Style x:Key="TrimForwardButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButtonStyle}">
                <Setter Property="Content" Value="{StaticResource TrimUp}"/>
            </Style>

            <Style x:Key="TrimBackwardButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButtonStyle}">
                <Setter Property="Content" Value="{StaticResource TrimDown}"/>
            </Style>

            <Style x:Key="TrimLeftButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButtonStyle}">
                <Setter Property="Content" Value="{StaticResource TrimLeft}"/>
            </Style>

            <Style x:Key="TrimRightButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource TrimDirectionButtonStyle}">
                <Setter Property="Content" Value="{StaticResource TrimRight}"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto" MaxWidth="500"/>
        </Grid.ColumnDefinitions>


        <Grid Grid.Column="0" Style="{StaticResource TrimGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Button Style="{StaticResource TrimForwardButtonStyle}" Command="{Binding TrimForward}" Grid.Row="0" Grid.Column="1"/>
            <Button Style="{StaticResource TrimBackwardButtonStyle}" Command="{Binding TrimBackward}" Grid.Row="2" Grid.Column="1"/>
            <Button Style="{StaticResource TrimLeftButtonStyle}" Command="{Binding TrimLeft}" Grid.Row="1" Grid.Column="0"/>
            <Button Style="{StaticResource TrimRightButtonStyle}" Command="{Binding TrimRight}" Grid.Row="1" Grid.Column="2"/>
        </Grid>

        <ItemsControl Grid.Column="1" Style="{StaticResource NudgeTrimPanelStyle}">
            <Button Style="{StaticResource IncreaseNudgeSpeedButtonStyle}" Command="{Binding IncreaseNudgeSpeed}"/>
            <Button Style="{StaticResource DecreaseNudgeSpeedButtonStyle}" Command="{Binding DecreaseNudgeSpeed}"/>

            <Button Style="{StaticResource IncreaseNudgeDurationButtonStyle}" Command="{Binding IncreaseNudgeDuration}"/>
            <Button Style="{StaticResource DecreaseNudgeDurationButtonStyle}" Command="{Binding DecreaseNudgeDuration}"/>
        </ItemsControl>
    </Grid>
</UserControl>
